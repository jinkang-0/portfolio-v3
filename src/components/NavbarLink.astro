---
import { trimSlash } from "@/lib/utils";

interface Props {
  href: string;
}

const { href } = Astro.props;
const pathname = Astro.url.pathname;
const isActive = trimSlash(pathname) === trimSlash(href);
---

<a href={href} class={isActive ? "active" : ""}>
  <slot />
</a>

<style lang="scss">
  @use "../styles/colors";
  @use "../styles/breakpoints";

  a {
    font-size: 1.5rem;
    text-decoration: none;
    color: colors.$grayText;
    transition: 150ms;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      height: 1px;
      display: block;
      background: black;
      border-radius: 9999px;
      transition: 150ms;
      transform: scaleX(0);
    }

    &.active {
      color: black;
      cursor: default;
      pointer-events: none;

      &::after {
        width: 0;
      }
    }

    &:hover {
      color: colors.$darkGrayText;

      &::after {
        transform: scaleX(1);
      }
    }
  }

  @media (max-width: breakpoints.$md) {
    a {
      font-size: 1.25rem;
    }
  }
</style>
